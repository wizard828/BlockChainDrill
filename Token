pragma solidity ^0.4.24;

contract Token {
    // Varibale 帳本
    mapping (address => uint) public balances;
    // uint 總供給量 = 2^256-1 所以不會overflow
    
    // Method 發幣
    constructor (uint totlaSupply) public {
        balances[msg.sender] = totlaSupply;
        // 發了多少
        
        // uint 總供給量 = 2^256-1 所以不會overflow
    }
    
    // Method 查帳本
    function getBlance(address user) public view returns (uint) {
        return balances[user];
    }
    
    // Method 轉帳（轉給誰?轉多少?）
    function trasfer(address to, uint value) public {
        // 先檢查自己的錢>= value
        require(balances[msg.sender] >= value);
        
        // 假設對方錢太多，避免錢包爆炸需<=
        require(balances[to] <= balances[to] + value);
        
        // Hint : 我扣掉 你增加
        balances[msg.sender] -= value;
        balances[to] +=value;
    }
    
    
    
}
